<?php

/**
 * BaseNote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $contact_id
 * @property string $title
 * @property clob $content
 * @property Contact $Contact
 * 
 * @method integer getContactId()  Returns the current record's "contact_id" value
 * @method string  getTitle()      Returns the current record's "title" value
 * @method clob    getContent()    Returns the current record's "content" value
 * @method Contact getContact()    Returns the current record's "Contact" value
 * @method Note    setContactId()  Sets the current record's "contact_id" value
 * @method Note    setTitle()      Sets the current record's "title" value
 * @method Note    setContent()    Sets the current record's "content" value
 * @method Note    setContact()    Sets the current record's "Contact" value
 * 
 * @package    addr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNote extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('note');
        $this->hasColumn('contact_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Contact', array(
             'local' => 'contact_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}