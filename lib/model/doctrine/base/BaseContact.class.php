<?php

/**
 * BaseContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $nick
 * @property string $addr1
 * @property string $addr2
 * @property string $city
 * @property string $state
 * @property string $zip
 * @property string $email1
 * @property string $email2
 * @property Doctrine_Collection $Notes
 * 
 * @method string              getName()   Returns the current record's "name" value
 * @method string              getNick()   Returns the current record's "nick" value
 * @method string              getAddr1()  Returns the current record's "addr1" value
 * @method string              getAddr2()  Returns the current record's "addr2" value
 * @method string              getCity()   Returns the current record's "city" value
 * @method string              getState()  Returns the current record's "state" value
 * @method string              getZip()    Returns the current record's "zip" value
 * @method string              getEmail1() Returns the current record's "email1" value
 * @method string              getEmail2() Returns the current record's "email2" value
 * @method Doctrine_Collection getNotes()  Returns the current record's "Notes" collection
 * @method Contact             setName()   Sets the current record's "name" value
 * @method Contact             setNick()   Sets the current record's "nick" value
 * @method Contact             setAddr1()  Sets the current record's "addr1" value
 * @method Contact             setAddr2()  Sets the current record's "addr2" value
 * @method Contact             setCity()   Sets the current record's "city" value
 * @method Contact             setState()  Sets the current record's "state" value
 * @method Contact             setZip()    Sets the current record's "zip" value
 * @method Contact             setEmail1() Sets the current record's "email1" value
 * @method Contact             setEmail2() Sets the current record's "email2" value
 * @method Contact             setNotes()  Sets the current record's "Notes" collection
 * 
 * @package    addr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contact');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('nick', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('addr1', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('addr2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('city', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('state', 'string', 2, array(
             'type' => 'string',
             'length' => 2,
             ));
        $this->hasColumn('zip', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('email1', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Note as Notes', array(
             'local' => 'id',
             'foreign' => 'contact_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}